#
# The purpose of this GitHub Action workflow is to run unit and integration tests on every PR and push 
# to both main & develop branches.
#
# It also generates code coverage reports and uploads them to Codecov, 
# and prints a summary of the job results.
#

name: Tests

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
      
      - name: Cache Deno dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/deno
            ~/.deno
          key: ${{ runner.os }}-deno-${{ hashFiles('**/deno.lock') }}
          restore-keys: |
            ${{ runner.os }}-deno-
      
      - name: Run unit tests
        run: deno task test
      
      - name: Generate coverage report
        run: deno task test:coverage
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage/coverage.lcov
          flags: unittests
          name: unit-tests
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Set environment variables
        run: |
            echo "SUPABASE_URL=http://127.0.0.1:54321" >> $GITHUB_ENV
            echo "SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0" >> $GITHUB_ENV
            echo "SUPABASE_FUNCTIONS_URL=http://127.0.0.1:54321/functions/v1" >> $GITHUB_ENV 

      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
      
      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest
      
      - name: Start Supabase
        run: |
          supabase init || true
          supabase start
      
      - name: Wait for Supabase to be ready
        run: sleep 10
      
      - name: Verify Supabase is running
        run: supabase status
      
      - name: Apply database migrations
        run: supabase db reset
      
      - name: Set environment variables
        run: |
          echo "SUPABASE_URL=http://127.0.0.1:54321" >> $GITHUB_ENV
          ANON_KEY=$(supabase status --output json | jq -r '.anon_key')
          echo "SUPABASE_ANON_KEY=$ANON_KEY" >> $GITHUB_ENV
          echo "SUPABASE_FUNCTIONS_URL=http://127.0.0.1:54321/functions/v1" >> $GITHUB_ENV
      
      - name: Run integration tests
        run: deno task test:integration
        env:
          SUPABASE_URL: ${{ env.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ env.SUPABASE_ANON_KEY }}
          SUPABASE_FUNCTIONS_URL: ${{ env.SUPABASE_FUNCTIONS_URL }}
      
      - name: Stop Supabase
        if: always()
        run: supabase stop --no-backup

  # Summary job that requires all others to pass
  test-summary:
    name: Test Results Summary
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
    if: always()
    
    steps:
      - name: Check test results
        run: |
          echo "## 🧪 Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.unit-tests.result }}" == "success" ]; then
            echo "✅ **Unit Tests**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Unit Tests**: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.integration-tests.result }}" == "success" ]; then
            echo "✅ **Integration Tests**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Integration Tests**: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.unit-tests.result }}" == "success" ] && \
             [ "${{ needs.integration-tests.result }}" == "success" ]; then
            echo "### 🎉 All tests passed!" >> $GITHUB_STEP_SUMMARY
            exit 0
          else
            echo "### ⚠️ Some tests failed" >> $GITHUB_STEP_SUMMARY
            echo "Please check the logs above for details." >> $GITHUB_STEP_SUMMARY
            exit 1
          fi